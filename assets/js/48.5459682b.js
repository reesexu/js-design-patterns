(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{285:function(a,e,t){"use strict";t.r(e);var s=t(0),n=Object(s.a)({},(function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"发布自己的-npm-package"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#发布自己的-npm-package","aria-hidden":"true"}},[a._v("#")]),a._v(" 发布自己的 npm package")]),a._v(" "),t("h2",{attrs:{id:"npm-账号"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#npm-账号","aria-hidden":"true"}},[a._v("#")]),a._v(" npm 账号")]),a._v(" "),t("p",[a._v("要在 npm 上发布自己的 package，那么就必须先有自己的账号，打开"),t("a",{attrs:{href:"https://www.npmjs.com/",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://www.npmjs.com/"),t("OutboundLink")],1),a._v("进行注册、登陆。")]),a._v(" "),t("h2",{attrs:{id:"本地登陆"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#本地登陆","aria-hidden":"true"}},[a._v("#")]),a._v(" 本地登陆")]),a._v(" "),t("p",[a._v("因为发布操作是在自己的机器上进行的，所以需要确保发布环境已进行 npm 账号登陆。")]),a._v(" "),t("p",[a._v("打开终端，执行"),t("code",[a._v("npm config get registry")]),a._v("，查看当前的源，"),t("code",[a._v("npm config get")]),a._v("用于查看当前的 npm 配置。因为国内的网络问题，我们经常会切换至淘宝等国内的镜像源，但是接下来是要在 npm 官方发布一个 package，所以需要保证当前的 registry 为 https://registry.npmjs.org/ 。")]),a._v(" "),t("p",[a._v("确保 registry 正确之后执行"),t("code",[a._v("npm login")]),a._v("，按要求你输入用户名、密码、邮箱，用于登陆验证。")]),a._v(" "),t("p",[a._v("执行"),t("code",[a._v("npm whoami")]),a._v("查看当前的已登陆用户，如果出现了自己的用户名，说明登陆成功。")]),a._v(" "),t("h2",{attrs:{id:"初始化项目"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#初始化项目","aria-hidden":"true"}},[a._v("#")]),a._v(" 初始化项目")]),a._v(" "),t("p",[a._v("新建一个目录用于保存、维护将要发布的 package，在目录中执行"),t("code",[a._v("npm init")]),a._v("初始化一个 npm 项目，package name 要注意不要与已有的 package 重名，因为 npm 不允许有两个相同、相似名称的 package。")]),a._v(" "),t("p",[a._v("初始化成功之后，可以看见目录中多了一个 package.json 文件。")]),a._v(" "),t("p",[a._v("在目录中创建一个 index.js ，文件内容如下。")]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[a._v("console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'hello npm'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),t("h2",{attrs:{id:"package-json-字段解析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#package-json-字段解析","aria-hidden":"true"}},[a._v("#")]),a._v(" package.json 字段解析")]),a._v(" "),t("p",[a._v("package.json 用于描述我们的 npm package 基本信息，打开 package.json ，可见如下内容。")]),a._v(" "),t("div",{staticClass:"language-json extra-class"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"name"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"test-publish-666"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"version"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"1.0.0"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"description"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('""')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"main"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"index.js"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"scripts"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"test"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"echo \\"Error: no test specified\\" && exit 1"')]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"author"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"wenchaoxu"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"license"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"ISC"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("ul",[t("li",[a._v("name： package 的名字。")]),a._v(" "),t("li",[a._v("version：package 的版本。")]),a._v(" "),t("li",[a._v("description：package 的简单描述。")]),a._v(" "),t("li",[a._v("main：package 的主入口文件，当使用者 import 你的 package 的时候，就是从这个入口文件 import。")]),a._v(" "),t("li",[a._v("scripts：自定义的 npm 脚本命令。")]),a._v(" "),t("li",[a._v("author：作者。")]),a._v(" "),t("li",[a._v("license：软件许可证类型。")])]),a._v(" "),t("h3",{attrs:{id:"其它常用字段"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#其它常用字段","aria-hidden":"true"}},[a._v("#")]),a._v(" 其它常用字段")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("module")]),a._v(" "),t("p",[a._v("也是 package 的主入口文件。跟 main 有什么区别呢？")]),a._v(" "),t("p",[a._v("module 用来声明 ES 模块规范的入口文件，因为 ES 模块支持静态分析，能够更好的 TreeShaking，所以 webpack 等构建工具会优先读取 module 字段，没有的话再去读取 main 字段。")]),a._v(" "),t("p",[a._v("nodejs 的 require 只认得 main 字段，所以 main 一般用于声明 commonjs 模块规范的入口文件。")]),a._v(" "),t("p",[a._v("所以在日常实践中，推荐 main、module 都声明，main 声明 commonjs 模块入口文件，module 声明 ES 模块入口文件。")])]),a._v(" "),t("li",[t("p",[a._v("files")]),a._v(" "),t("p",[a._v("很多时候我们的 package 可能有多个不同的入口文件，这时候即可用"),t("a",{attrs:{href:"https://docs.npmjs.com/cli/v6/configuring-npm/package-json#files",target:"_blank",rel:"noopener noreferrer"}},[a._v("files"),t("OutboundLink")],1),a._v("声明一个数组将多个文件包含进来。")]),a._v(" "),t("p",[a._v("如下就会将当前目录的 src 文件夹中，以及 dist 下的 js 文件都包含为模块文件，在 package 安装之后，能够看见这些文件的存在。")]),a._v(" "),t("div",{staticClass:"language-json extra-class"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"files"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"src"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"dist/*.js"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n")])])])]),a._v(" "),t("li",[t("p",[a._v("peerDependencies")]),a._v(" "),t("p",[a._v("对于 devDependencies 和 dependencies 我们已经再熟悉不过了，但是 peerDependencies 呢？从"),t("a",{attrs:{href:"https://github.com/ant-design/ant-design/blob/master/package.json",target:"_blank",rel:"noopener noreferrer"}},[a._v("ant-design"),t("OutboundLink")],1),a._v("和"),t("a",{attrs:{href:"https://github.com/ElemeFE/element/blob/dev/package.json",target:"_blank",rel:"noopener noreferrer"}},[a._v("element"),t("OutboundLink")],1),a._v("两个主流组件库可见都有声明该字段。")]),a._v(" "),t("p",[a._v("peerDependencies 可以理解为前置依赖，在使用我们的 package 的时候，需要安装 peerDependencies 里面要求的依赖。那跟 dependencies 有什么区别呢？")]),a._v(" "),t("p",[a._v("声明为 dependencies 的依赖会随着我们的 package 安装而一起安装进来，而 peerDependencies 不会，如果没有安装 peerDependencies 里的依赖，npm install 的时候只会出现警告。")]),a._v(" "),t("p",[a._v("那么为什么不直接用 dependencies？ 因为声明为 dependencies 的话，比如应用、和 package 的 react 依赖版本不同，那么就会导入两个同名但不同版本的 react，那么对于需要保证单例的依赖就会出现警告、报错、甚至运行错误。")]),a._v(" "),t("p",[a._v("所以 peerDependencies 适合用于声明那些 package 的必须、但又需要保证整个应用中只有一个的依赖。")]),a._v(" "),t("p",[a._v("如下会告诉应用使用方，在 install package 的时候，必须安装版本号大于或等于 16.9.0 的 react，否则会出现警告。")]),a._v(" "),t("div",{staticClass:"language-json extra-class"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"peerDependencies"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"react"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('">=16.9.0"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])])])]),a._v(" "),t("p",[a._v("关于 package.json 的更多字段含义，可从"),t("a",{attrs:{href:"https://docs.npmjs.com/cli/v6/configuring-npm/package-json",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://docs.npmjs.com/cli/v6/configuring-npm/package-json"),t("OutboundLink")],1),a._v("中查看。")]),a._v(" "),t("h2",{attrs:{id:"发布"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#发布","aria-hidden":"true"}},[a._v("#")]),a._v(" 发布")]),a._v(" "),t("h3",{attrs:{id:"初次发布"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#初次发布","aria-hidden":"true"}},[a._v("#")]),a._v(" 初次发布")]),a._v(" "),t("p",[a._v("在准备好了我们的 package 相关文件之后，在当前目录中执行"),t("code",[a._v("npm publish")]),a._v("，稍等片刻即可见 package 发布成功。")]),a._v(" "),t("p",[a._v("在"),t("a",{attrs:{href:"https://www.npmjs.com/",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://www.npmjs.com/"),t("OutboundLink")],1),a._v("中根据 package 名称查找，可看见刚发布的 package。这样就能够通过"),t("code",[a._v("npm i")]),a._v("来安装该 package 了。")]),a._v(" "),t("h3",{attrs:{id:"更新发布"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#更新发布","aria-hidden":"true"}},[a._v("#")]),a._v(" 更新发布")]),a._v(" "),t("p",[a._v("我们的 package 经常需要进行 bug 修复、新增 feature 等，所以需要更新发布新的 package。在本地修改代码之后，可以手动将 package.json 中等 version 版本号+1，然后再次执行"),t("code",[a._v("npm publish")]),a._v("发布新包。")]),a._v(" "),t("p",[a._v("当然 npm 也提供了命令"),t("code",[a._v("npm version")]),a._v("来避免手动对 version 进行修改。")]),a._v(" "),t("p",[a._v("从此处"),t("a",{attrs:{href:"https://docs.npmjs.com/cli/v6/commands/npm-version",target:"_blank",rel:"noopener noreferrer"}},[a._v("npm-version"),t("OutboundLink")],1),a._v("可查看 version 命令的更多参数解析。")]),a._v(" "),t("p",[a._v("比如执行"),t("code",[a._v("npm version patch")]),a._v("，就会将当前 version 从 1.0.0 改为 1.0.1，如当前目录为 git 仓库，那么还会打上 git tag 并进行 commit。")]),a._v(" "),t("p",[a._v("所以我们可以将发布命名合并为一个 script 命令，方便下次发布执行，如下。")]),a._v(" "),t("div",{staticClass:"language-json extra-class"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"scripts"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"publish-patch"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"npm version patch && npm publish"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n")])])]),t("p",[a._v("当执行"),t("code",[a._v("npm run publish-patch")]),a._v("的时候，补丁版本号自动+1，然后进行发布。")])])}),[],!1,null,null,null);e.default=n.exports}}]);